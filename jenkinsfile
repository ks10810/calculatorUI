pipeline {
     agent any
     triggers {
          pollSCM('* * * * *')
     }
     stages {
          stage("Compile") {
               steps {
                    sh "./mvnw package"
               }
          }
/*          stage("Unit Test") {
               steps {
                    sh "./mvnw pre-integration-test"
               }
          }
          stage("Code coverage") {
               steps {
                    sh "./mvnw jacoco:report"
                    publishHTML (target: [
                         allowMissing: false,
                         alwaysLinkToLastBuild: false,
                         keepAll: true,
                         reportDir: 'target/jacoco-report',
                         reportFiles: 'index.html',
                         reportName: "JaCoCo Report"
                    ])
                    sh "./mvnw jacoco:check"
               }
          }
          stage("Docker build") {
               steps {
                    sh "docker build -t localhost:5000/calculator ."
               }
          }
          stage("Docker push") {
               steps {
                    sh "docker push localhost:5000/calculator"
               }
          }
          stage("Image Vul Scan") {
                steps {
                    aquaMicroscanner imageName: 'localhost:5000/calculator', notCompliesCmd: 'exit 1', onDisallowed: 'fail', outputFormat: 'html'
                }
          }
          stage("Remove container") {
               steps {
                    sh "docker ps -q --filter 'name=calculator' | grep -q . && docker rm -fv calculator || true"
               }
          }
          stage("Launch staging") {
               steps {
                    sh "docker run -d --restart=always -p 9090:8080 --name calculator localhost:5000/calculator"
               }
          }
          stage("Acceptance test") {
               steps {
                    sleep 10
                    sh "./mvnw integration-test -Dcalculator.url=http://localhost:9090"
               }
          }*/
     }
}
